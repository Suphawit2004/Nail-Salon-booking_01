import {NextResponse} from "next/server";import {readBookings,writeBookings} from "../../../lib/store";export async function GET(_req:Request,{params}:{params:{id:string}}){const list=await readBookings();const it=list.find(b=>b.id===params.id);if(!it)return NextResponse.json({error:"not found"},{status:404});return NextResponse.json(it);}export async function PATCH(req:Request,{params}:{params:{id:string}}){const body=await req.json().catch(()=>({}));const {status,paymentMethod,paymentRef,paidAt}=body||{};const list=await readBookings();const i=list.findIndex(b=>b.id===params.id);if(i===-1)return NextResponse.json({error:"not found"},{status:404});list[i]={...list[i],...(status?{status}:{}),...(paymentMethod?{paymentMethod}:{}),...(paymentRef?{paymentRef}:{}),...(paidAt?{paidAt}:{}),};await writeBookings(list);return NextResponse.json(list[i]);}export async function DELETE(_req:Request,{params}:{params:{id:string}}){const list=await readBookings();const next=list.filter(b=>b.id!==params.id);if(next.length===list.length)return NextResponse.json({error:"not found"},{status:404});await writeBookings(next);return NextResponse.json({ok:true});}